#version 450
layout(local_size_x = 8, local_size_y = 8) in;

#if defined(SCALED)
layout(set = 0, binding = 0, rgba8) uniform writeonly image2D uFramebuffer;
layout(set = 0, binding = 1) uniform sampler2D uImage;
#elif defined(UNSCALED)
layout(set = 0, binding = 0, r32ui) uniform writeonly uimage2D uFramebuffer;
layout(set = 0, binding = 1) uniform usampler2D uImage;
#else
#error "Invalid defines."
#endif

layout(push_constant, std430) uniform Rect
{
    uvec2 src_offset;
    uvec2 dst_offset;
    uvec2 extent;
    vec2 inv_size;
} rect;

void main()
{
    if (all(lessThan(gl_GlobalInvocationID.xy, rect.extent)))
    {
        uvec2 src_coord = gl_GlobalInvocationID.xy + rect.src_offset;
        uvec2 dst_coord = gl_GlobalInvocationID.xy + rect.dst_offset;
        vec2 uv = (vec2(src_coord) + 0.5) * rect.inv_size;
#if defined(SCALED)
        vec4 value = textureLod(uImage, uv, 0.0);
        imageStore(uFramebuffer, ivec2(dst_coord), value);
#elif defined(UNSCALED)
        uint value = textureLod(uImage, uv, 0.0).x;
        imageStore(uFramebuffer, ivec2(dst_coord), uvec4(value));
#endif
    }
}
#version 310 es
layout(local_size_x = 8, local_size_y = 8) in;

#if defined(SCALED)
layout(set = 0, binding = 0) uniform sampler2D uFramebuffer;
#else
layout(set = 0, binding = 0) uniform highp usampler2D uFramebuffer;
#endif
layout(set = 1, binding = 0, rgba8) uniform writeonly mediump image2DArray uImage;

struct BlitInfo
{
    uvec2 offset;
    uvec2 extent;
    uvec2 base;
    uint mask;
    uint layer;
};

layout(set = 1, binding = 1, std140) uniform BlitInfos
{
    BlitInfo infos[512];
};

layout(push_constant, std430) uniform PushConstant
{
    vec2 inv_size;
    uint scaling;
} registers;

void main()
{
    uvec2 coord = infos[gl_WorkGroupID.z].offset + infos[gl_WorkGroupID.z].base;
#if defined(SCALED)
    vec2 uv = (vec2(coord) + 0.5) * registers.inv_size;
    vec4 color = textureLod(uFramebuffer, uv, 0.0);
#elif defined(UNSCALED)
    vec2 uv = (vec2(coord) + 0.5) / vec2(1024.0, 512.0);
    uint rgba = textureLod(uFramebuffer, uv, 0.0).x;
    uvec4 ucolor = (uvec4(rgba) >> uvec4(0u, 5u, 10u, 15u)) & uvec4(31u, 31u, 31u, 1u);
    vec4 color = vec4(ucolor) / vec4(31.0, 31.0, 31.0, 1.0);
#else
#error "Invalid defines."
#endif

    imageStore(uImage, ivec3(gl_GlobalInvocationID.xyz), color);
}